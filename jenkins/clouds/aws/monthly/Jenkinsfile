pipeline {
    agent {
        docker {
            label 'cloud-governance-worker'
            image 'quay.io/athiru/centos-stream8-podman:latest'
            args  '--rm --net host -u root -v /tmp/aws/cloud-governance-monthly/:/var/lib/containers --privileged'
        }
    }
    environment {
        ES_HOST = credentials('cloud-governance-es-host')
        ES_PORT = credentials('cloud-governance-es-port')
        TO_MAIL = credentials('cloud-governance-to-mail')
        CC_MAIL = credentials('cloud-governance-cc-mail')

        contact1 = "ebattat@redhat.com"
        contact2 = "athiruma@redhat.com"
    }
    stages {
        stage('Checkout') { // Checkout (git clone ...) the projects repository
          steps {
            checkout scm
           }
        }
        stage('Initial Cleanup') {
            steps {
                 sh '''if [[ "$(podman images -q quay.io/ebattat/cloud-governance 2> /dev/null)" != "" ]]; then podman rmi -f $(podman images -q quay.io/ebattat/cloud-governance 2> /dev/null); fi'''
            }
        }
        stage('Run Monthly Policies') {
            steps {
                 sh 'python3 jenkins/clouds/aws/monthly/run_monthly_policies.py'
            }
        }
        stage('Finalize Cleanup') {
            steps {
                 sh '''if [[ "$(podman images -q quay.io/ebattat/cloud-governance 2> /dev/null)" != "" ]]; then podman rmi -f $(podman images -q quay.io/ebattat/cloud-governance 2> /dev/null); fi'''
                 deleteDir()
            }
        }
    }
    post {
       always {
           deleteDir()
       }
        failure {
              script {
                msg = "Build error for ${env.JOB_NAME} ${env.BUILD_NUMBER} (${env.BUILD_URL})"
                emailext body: """\
            Jenkins job: ${env.BUILD_URL}\nSee the console output for more details:  ${env.BUILD_URL}consoleFull\n\n
            """,
                subject: msg,
                to: "${contact1}, ${contact2}"
            }
        }
    }
}
